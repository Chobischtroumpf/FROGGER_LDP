<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="DrawingUtils_8cpp" kind="file" language="C++">
    <compoundname>DrawingUtils.cpp</compoundname>
    <includes refid="DrawingUtils_8hpp" local="yes">DrawingUtils.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>srcs/DrawingUtils.cpp</label>
        <link refid="DrawingUtils_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Lane.hpp</label>
        <link refid="Lane_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>DisplaySettings.hpp</label>
        <link refid="DisplaySettings_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>FL/Fl.H</label>
      </node>
      <node id="3">
        <label>FL/fl_draw.H</label>
      </node>
      <node id="10">
        <label>Board.hpp</label>
        <link refid="Board_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Coordinate.hpp</label>
        <link refid="Coordinate_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="5">
        <label>FL/Fl_PNG_Image.H</label>
      </node>
      <node id="12">
        <label>cstdlib</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>DrawingUtils.hpp</label>
        <link refid="DrawingUtils_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GameModel.hpp</label>
        <link refid="GameModel_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="DrawingUtils_8cpp_1a9fc52d06493f88014bb60133832ab56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Fl_Color</type>
        <definition>Fl_Color getVehicleColor</definition>
        <argsstring>(VehicleType type)</argsstring>
        <name>getVehicleColor</name>
        <param>
          <type>VehicleType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="5" column="10" bodyfile="srcs/DrawingUtils.cpp" bodystart="5" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1afef05aa5643224b6c958f73802044e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawFilledRect</definition>
        <argsstring>(int x, int y, int width, int height, Fl_Color fillColor, Fl_Color frameColor)</argsstring>
        <name>drawFilledRect</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Fl_Color</type>
          <declname>fillColor</declname>
        </param>
        <param>
          <type>Fl_Color</type>
          <declname>frameColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="21" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1ace9963e61db0196bce16e380ec4adeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawSquare</definition>
        <argsstring>(Position pos, int size, Fl_Color fillColor, Fl_Color frameColor)</argsstring>
        <name>drawSquare</name>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>Fl_Color</type>
          <declname>fillColor</declname>
        </param>
        <param>
          <type>Fl_Color</type>
          <declname>frameColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="29" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a8774d2cc34eb33c0ffa722e15bb0ab44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawVehicle</definition>
        <argsstring>(Vehicle v)</argsstring>
        <name>drawVehicle</name>
        <param>
          <type><ref refid="classVehicle" kindref="compound">Vehicle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="40" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="40" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a94e5b170fdff20ac836b6282061946fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawPNG</definition>
        <argsstring>(const char *filename, Position pos, int size)</argsstring>
        <name>drawPNG</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="63" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a2fd9608e7d61065b783e0e3556751f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawTransformedRectangle</definition>
        <argsstring>(int x, int y, int w, int h)</argsstring>
        <name>drawTransformedRectangle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="73" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="73" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1acd43c229bf5a36db30c05112cf476478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawPlayer</definition>
        <argsstring>(Position pos, int rotation)</argsstring>
        <name>drawPlayer</name>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="82" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="82" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1ac69ac8418134e503b0c4d6bc1bbfa0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawTile</definition>
        <argsstring>(Tile tile, Fl_Color fillColor)</argsstring>
        <name>drawTile</name>
        <param>
          <type><ref refid="classTile" kindref="compound">Tile</ref></type>
          <declname>tile</declname>
        </param>
        <param>
          <type>Fl_Color</type>
          <declname>fillColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="120" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="120" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1ab9fb9b5c291b9afa5e37f32d8b81e18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawLilyPad</definition>
        <argsstring>(Position pos, int size)</argsstring>
        <name>drawLilyPad</name>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="143" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="143" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a87d4a79cb37bddb59dbc3a42f64dddc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawLife</definition>
        <argsstring>(int life)</argsstring>
        <name>drawLife</name>
        <param>
          <type>int</type>
          <declname>life</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="169" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="169" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a3c883d279150570389b4266e936126be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawGameOver</definition>
        <argsstring>(bool winOrLose)</argsstring>
        <name>drawGameOver</name>
        <param>
          <type>bool</type>
          <declname>winOrLose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="183" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="183" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="DrawingUtils_8cpp_1a3c3559616bcb08f4ccb9373e27178758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void drawScore</definition>
        <argsstring>(int score)</argsstring>
        <name>drawScore</name>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="srcs/DrawingUtils.cpp" line="195" column="6" bodyfile="srcs/DrawingUtils.cpp" bodystart="195" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;DrawingUtils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">Fl_Color<sp/>getVehicleColor(VehicleType<sp/>type){</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VehicleType::Bus<sp/>:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL_YELLOW;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VehicleType::Car:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL_RED;<sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VehicleType::Log:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fl_rgb_color(55,<sp/>33,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Brown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>VehicleType::Turtle:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL_DARK_GREEN;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL_WHITE;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>filled<sp/>rectangle<sp/>with<sp/>a<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawFilledRect(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>Fl_Color<sp/>fillColor,<sp/>Fl_Color<sp/>frameColor<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(fillColor);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_rectf(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(frameColor);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_rect(x,<sp/>y,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawSquare(<ref refid="structPosition" kindref="compound">Position</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>Fl_Color<sp/>fillColor<sp/>,<sp/>Fl_Color<sp/>frameColor<sp/>){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileSize<sp/>=<sp/>DisplaySettings::tileSize;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref><sp/>coord<sp/>=<sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref>{pos};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>fill<sp/>color<sp/>and<sp/>draw<sp/>the<sp/>filled<sp/>square</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(fillColor);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_rectf(coord.x<sp/>+<sp/>(<sp/>tileSize<sp/>-<sp/>size<sp/>)<sp/>/<sp/>2<sp/>,<sp/>coord.y<sp/>+<sp/>(<sp/>tileSize<sp/>-<sp/>size<sp/>)<sp/>/<sp/>2,<sp/>size,<sp/>size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draws<sp/>a<sp/>vehicle<sp/>part<sp/>on<sp/>the<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawVehicle(<ref refid="classVehicle" kindref="compound">Vehicle</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileSize<sp/>=<sp/>DisplaySettings::tileSize;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref><sp/>coord<sp/>=<sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref>{v.position};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Fl_Color<sp/>vehicleColor<sp/>=<sp/>getVehicleColor(v.getType());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(vehicleColor);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>vechicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.getDirection()<sp/>==<sp/>Direction::Right)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl_rectf(coord.x<sp/>-<sp/>v.length<sp/>*<sp/>tileSize<sp/>,<sp/>coord.y<sp/>+<sp/>(<sp/>tileSize<sp/>-<sp/>size<sp/>)<sp/>/<sp/>2,<sp/>v.length<sp/>*<sp/>tileSize,<sp/>size);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl_rectf(coord.x<sp/>+<sp/>(<sp/>tileSize<sp/>-<sp/>size<sp/>)<sp/>/<sp/>2,<sp/>coord.y<sp/>+<sp/>(<sp/>tileSize<sp/>-<sp/>size<sp/>)<sp/>/<sp/>2,<sp/><sp/>v.length<sp/>*<sp/>tileSize,<sp/>size);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>PNG<sp/>image<sp/>on<sp/>the<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPNG(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,<sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>imagePath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;assets/&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(filename);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Fl_PNG_Image<sp/>png(imagePath.c_str());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageWidth<sp/>=<sp/>png.w();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageHeight<sp/>=<sp/>png.h();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pos.x<sp/>-<sp/>imageWidth<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>pos.y<sp/>-<sp/>imageHeight<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>png.draw(x,<sp/>y,<sp/>imageWidth,<sp/>imageHeight);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawTransformedRectangle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_begin_polygon();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_vertex(x,<sp/>y);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_vertex(x<sp/>+<sp/>w,<sp/>y);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_vertex(x<sp/>+<sp/>w,<sp/>y<sp/>+<sp/>h);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_vertex(x,<sp/>y<sp/>+<sp/>h);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_end_polygon();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawPlayer(<ref refid="structPosition" kindref="compound">Position</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rotation)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref><sp/>coord<sp/>=<sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref>{pos};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileSize<sp/>=<sp/>DisplaySettings::tileSize;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>30;<sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>the<sp/>frog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>center<sp/>of<sp/>the<sp/>frog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerX<sp/>=<sp/>coord.x<sp/>;<sp/></highlight><highlight class="comment">//<sp/>Already<sp/>centered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerY<sp/>=<sp/>coord.y<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>current<sp/>transformation<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_push_matrix();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>to<sp/>the<sp/>center<sp/>of<sp/>the<sp/>frog<sp/>and<sp/>apply<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_translate(centerX,<sp/>centerY);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_rotate(rotation);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>body<sp/>of<sp/>the<sp/>frog<sp/>using<sp/>the<sp/>helper<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_GREEN);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(-size<sp/>/<sp/>2,<sp/>-size<sp/>/<sp/>2,<sp/>size,<sp/>size);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>eyes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_RED);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(-size<sp/>/<sp/>4,<sp/>-size<sp/>/<sp/>4,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(size<sp/>/<sp/>4<sp/>-<sp/>5,<sp/>-size<sp/>/<sp/>4,<sp/>5,<sp/>5);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>rectangular<sp/>legs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_GREEN);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(-size<sp/>/<sp/>2<sp/>-<sp/>5,<sp/>size<sp/>/<sp/>3,<sp/>10,<sp/>10);<sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>back<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(size<sp/>/<sp/>2<sp/>-<sp/>5,<sp/>size<sp/>/<sp/>3,<sp/>10,<sp/>10);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>back<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(-size<sp/>/<sp/>2<sp/>-<sp/>5,<sp/>-size<sp/>/<sp/>3<sp/>-<sp/>10,<sp/>10,<sp/>10);<sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>front<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTransformedRectangle(size<sp/>/<sp/>2<sp/>-<sp/>5,<sp/>-size<sp/>/<sp/>3<sp/>-<sp/>10,<sp/>10,<sp/>10);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>front<sp/>leg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>transformation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_pop_matrix();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>tile<sp/>on<sp/>the<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawTile(<ref refid="classTile" kindref="compound">Tile</ref><sp/>tile,<sp/>Fl_Color<sp/>fillColor)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileSize<sp/>=<sp/>DisplaySettings::tileSize;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tile.type)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TileType::Classic:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSquare(tile.pos,<sp/>tileSize,<sp/>fillColor,<sp/>FL_BLACK<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TileType::EmptyLilypad:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSquare(tile.pos,<sp/>tileSize,<sp/>FL_BLUE,<sp/>FL_BLACK<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawLilyPad(tile.pos,<sp/>40);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TileType::CompletedLilypad:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawSquare(tile.pos,<sp/>tileSize,<sp/>FL_BLUE,<sp/>FL_BLACK<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawLilyPad(tile.pos,<sp/>40);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawPlayer(<ref refid="structPosition" kindref="compound">Position</ref>{tile.pos.x<sp/>+<sp/>tileSize/2,<sp/>tile.pos.y<sp/>+<sp/>tileSize/2},<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>draw<sp/>a<sp/>lily<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLilyPad(<ref refid="structPosition" kindref="compound">Position</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tileSize<sp/>=<sp/>DisplaySettings::tileSize;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref><sp/>coord<sp/>=<sp/><ref refid="classCoordinate" kindref="compound">Coordinate</ref>{pos};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_push_matrix();<sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>current<sp/>transformation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>to<sp/>the<sp/>center<sp/>of<sp/>the<sp/>lily<sp/>pad<sp/>for<sp/>better<sp/>positioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_translate(coord.x<sp/>+<sp/>tileSize<sp/>/<sp/>2,<sp/>coord.y<sp/>+<sp/>tileSize<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>color<sp/>to<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_DARK_GREEN);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>drawing<sp/>an<sp/>ellipse<sp/>representing<sp/>the<sp/>lily<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_begin_complex_polygon();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>360;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>i<sp/>*<sp/>3.14159<sp/>/<sp/>180.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>angle<sp/>to<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fl_vertex(cos(angle)<sp/>*<sp/>size<sp/>/<sp/>2,<sp/>sin(angle)<sp/>*<sp/>size<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_end_complex_polygon();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_pop_matrix();<sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>transformation<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>number<sp/>of<sp/>lives<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawLife(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>life)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>life<sp/>indicator<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>heart<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;❤️&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>hearts;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>life;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hearts<sp/>+=<sp/>heart;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_RED);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_font(FL_HELVETICA,<sp/>18);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_draw(hearts.c_str(),<sp/>DisplaySettings::boardCoords.x,<sp/>DisplaySettings::boardCoords.y<sp/>-<sp/>30);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>game<sp/>over<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawGameOver(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>winOrLose)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>message<sp/>=<sp/>winOrLose<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>Win!&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Game<sp/>Over!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>message<sp/>at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(<sp/>winOrLose<sp/>?<sp/>FL_GREEN<sp/>:<sp/>FL_RED);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_font(FL_HELVETICA,<sp/>36);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>drawPNG(winOrLose<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;youwin.png&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;gameover.png&quot;</highlight><highlight class="normal">,<sp/><ref refid="structPosition" kindref="compound">Position</ref>{DisplaySettings::boardCoords.x<sp/>+<sp/>DisplaySettings::boardViewSize/2<sp/>,<sp/>DisplaySettings::boardCoords.y<sp/>+<sp/>DisplaySettings::boardViewSize/4<sp/>},<sp/>200);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>drawPNG(</highlight><highlight class="stringliteral">&quot;tryagain.png&quot;</highlight><highlight class="normal">,<sp/><ref refid="structPosition" kindref="compound">Position</ref>{DisplaySettings::boardCoords.x<sp/>+<sp/>DisplaySettings::boardViewSize/2<sp/>,<sp/>DisplaySettings::boardCoords.y<sp/>+<sp/>DisplaySettings::boardViewSize/4<sp/>+<sp/>100<sp/><sp/>},<sp/>200);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>drawPNG(</highlight><highlight class="stringliteral">&quot;menu.png&quot;</highlight><highlight class="normal">,<sp/><ref refid="structPosition" kindref="compound">Position</ref>{DisplaySettings::boardCoords.x<sp/>+<sp/>DisplaySettings::boardViewSize/2<sp/>,<sp/>DisplaySettings::boardCoords.y<sp/>+<sp/>DisplaySettings::boardViewSize/4<sp/>+<sp/>300},<sp/>200);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawScore(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>score<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>scoreStr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Score:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(score);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>score<sp/>at<sp/>the<sp/>top<sp/>right<sp/>corner<sp/>of<sp/>the<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_color(FL_WHITE);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_font(FL_COURIER_BOLD,<sp/>18);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>fl_draw(scoreStr.c_str(),<sp/>DisplaySettings::boardViewSize<sp/>-<sp/>50,<sp/>DisplaySettings::boardCoords.y<sp/>-<sp/>30);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="srcs/DrawingUtils.cpp"/>
  </compounddef>
</doxygen>
